-- Create tables with suitable constraints

CREATE TABLE CUSTOMERS (
    CNo INT PRIMARY KEY,
    Cname VARCHAR(50) NOT NULL,
    Ccity VARCHAR(50),
    CMobile VARCHAR(15)
);

CREATE TABLE ITEMS (
    INo INT PRIMARY KEY,
    Iname VARCHAR(50) NOT NULL,
    Itype VARCHAR(50),
    Iprice DECIMAL(10, 2),
    Icount INT
);

CREATE TABLE PURCHASE (
    PNo INT PRIMARY KEY,
    Pdate DATE,
    Pquantity INT,
    Cno INT,
    INo INT,
    FOREIGN KEY (Cno) REFERENCES CUSTOMERS(CNo),
    FOREIGN KEY (INo) REFERENCES ITEMS(INo)
);

-- Insert data into tables

-- Insert into CUSTOMERS
INSERT INTO CUSTOMERS VALUES (1, 'Gopal', 'City1', '1234567890');
INSERT INTO CUSTOMERS VALUES (2, 'Maya', 'City2', '9876543210');
-- Add more customers as needed

-- Insert into ITEMS
INSERT INTO ITEMS VALUES (101, 'Pen', 'Stationary', 5.00, 100);
INSERT INTO ITEMS VALUES (102, 'Notebook', 'Stationary', 30.00, 50);
INSERT INTO ITEMS VALUES (103, 'Mobile', 'Electronics', 1000.00, 10);
-- Add more items as needed

-- Insert into PURCHASE
INSERT INTO PURCHASE VALUES (201, '2023-01-01', 2, 1, 101);
INSERT INTO PURCHASE VALUES (202, '2023-02-15', 1, 2, 102);
INSERT INTO PURCHASE VALUES (203, '2023-03-20', 3, 1, 102);
-- Add more purchases as needed

-- Queries

-- 1. List all stationary items with price between 400/- to 1000/-
SELECT *
FROM ITEMS
WHERE Itype = 'Stationary' AND Iprice BETWEEN 400.00 AND 1000.00;

-- 2. Change the mobile number of customer “Gopal”
UPDATE CUSTOMERS
SET CMobile = '9999999999'
WHERE Cname = 'Gopal';

-- 3. Display the item with the maximum price
SELECT *
FROM ITEMS
WHERE Iprice = (SELECT MAX(Iprice) FROM ITEMS);

-- 4. Display all purchases sorted from the most recent to the oldest
SELECT *
FROM PURCHASE
ORDER BY Pdate DESC;

-- 5. Count the number of customers in every city
SELECT Ccity, COUNT(*) AS num_customers
FROM CUSTOMERS
GROUP BY Ccity;

-- 6. Display all purchased quantity of Customer Maya
SELECT SUM(Pquantity) AS total_quantity
FROM PURCHASE
WHERE Cno = (SELECT CNo FROM CUSTOMERS WHERE Cname = 'Maya');

-- 7. Create a view which shows Iname, Price, and Count of all stationary items in descending order of price.
CREATE VIEW StationaryView AS
SELECT Iname, Iprice, Icount
FROM ITEMS
WHERE Itype = 'Stationary'
ORDER BY Iprice DESC;

-- Display content of the view
SELECT * FROM StationaryView;
