
CREATE TABLE Account (
  acc_no INT,
  branch_name VARCHAR(255),
  balance INT,
  PRIMARY KEY (acc_no)
);

CREATE TABLE Branch (
  branch_name VARCHAR(255),
  branch_city VARCHAR(255),
  assets INT,
  PRIMARY KEY (branch_name)
);

CREATE TABLE Customer (
  cust_name VARCHAR(255),
  cust_street VARCHAR(255),
  cust_city VARCHAR(255),
  PRIMARY KEY (cust_name)
);

CREATE TABLE Depositor (
  cust_name VARCHAR(255),
  acc_no INT
);

CREATE TABLE Loan (
  loan_no INT,
  branch_name VARCHAR(255),
  amount INT,
  PRIMARY KEY (loan_no)
);

CREATE TABLE Borrower (
  cust_name VARCHAR(255),
  loan_no INT
);
ALTER TABLE Account ADD FOREIGN KEY (branch_name) REFERENCES Branch (branch_name);
ALTER TABLE Depositor ADD FOREIGN KEY (cust_name) REFERENCES Customer (cust_name);
ALTER TABLE Depositor ADD FOREIGN KEY (acc_no) REFERENCES Account (acc_no);
ALTER TABLE Loan ADD FOREIGN KEY (branch_name) REFERENCES Branch (branch_name);
ALTER TABLE Borrower ADD FOREIGN KEY (cust_name) REFERENCES Customer (cust_name);
ALTER TABLE Borrower ADD FOREIGN KEY (loan_no) REFERENCES Loan (loan_no);

INSERT INTO Branch (branch_name, branch_city, assets) VALUES
('Wadia college', 'Pune', 5000000),
('Nigdi', 'Pune', 3000000),
('Kharadi', 'Pune', 4000000),
('Hadapsar', 'Pune', 3500000),
('Pune Station', 'Pune', 4500000);

INSERT INTO Account (acc_no, branch_name, balance) VALUES
(101, 'Wadia college', 15000),
(102, 'Nigdi', 8000),
(103, 'Kharadi', 20000),
(104, 'Hadapsar', 12000),
(105, 'Pune Station', 5000);

INSERT INTO Customer (cust_name, cust_street, cust_city) VALUES
('Sai', 'Street 1', 'Pune'),
('Yash', 'Street 2', 'Pune'),
('Ravi', 'Street 3', 'Pune'),
('Sham', 'Street 4', 'Pune'),
('Prachi', 'Street 5', 'Pune');

INSERT INTO Depositor (cust_name, acc_no) VALUES
('Sai', 101),
('Yash', 102),
('Ravi', 103),
('Sham', 101),
('Prachi', 104);

INSERT INTO Loan (loan_no, branch_name, amount) VALUES
(201, 'Wadia college', 15000),
(202, 'Nigdi', 13000),
(203, 'Kharadi', 25000),
(204, 'Hadapsar', 18000),
(205, 'Wadia college', 1400);

INSERT INTO Borrower (cust_name, loan_no) VALUES
('Sai', 202),
('Yash', 203),
('Prachi', 205);




-- 1. Create a View1 to display List all customers in alphabetical order who have a loan from Pune_Station branch.
CREATE VIEW View1 AS
SELECT DISTINCT C.cust_name
FROM Customer C
JOIN Borrower B ON C.cust_name = B.cust_name
JOIN Loan L ON B.loan_no = L.loan_no
WHERE L.branch_name = 'Pune_Station'
ORDER BY C.cust_name;

-- 2. Create View2 on the branch table by selecting any two columns and perform insert, update, delete operations.
CREATE VIEW View2 AS
SELECT branch_name, branch_city
FROM Branch;

-- Perform insert operation on View2
INSERT INTO View2 VALUES ('New_Branch', 'New_City');

-- Perform update operation on View2
UPDATE View2
SET branch_city = 'Updated_City'
WHERE branch_name = 'New_Branch';

-- Perform delete operation on View2
DELETE FROM View2
WHERE branch_name = 'New_Branch';

-- 3. Create View3 on the borrower and depositor table by selecting any one column from each table and perform insert, update, delete operations.
CREATE VIEW View3 AS
SELECT B.cust_name
FROM Borrower B
JOIN Depositor D ON B.cust_name = D.cust_name;

-- Perform insert operation on View3
INSERT INTO View3 VALUES ('New_Customer');

-- Perform update operation on View3
UPDATE View3
SET cust_name = 'Updated_Customer'
WHERE cust_name = 'New_Customer';

-- Perform delete operation on View3
DELETE FROM View3
WHERE cust_name = 'Updated_Customer';

-- 4. Create Union of left and right join for all customers who have an account or loan or both at the bank.
CREATE VIEW UnionView AS
SELECT C.cust_name, A.branch_name, B.loan_no
FROM Customer C
LEFT JOIN Depositor D ON C.cust_name = D.cust_name
LEFT JOIN Account A ON D.acc_no = A.Acc_no
LEFT JOIN Borrower B ON C.cust_name = B.cust_name
UNION
SELECT C.cust_name, A.branch_name, B.loan_no
FROM Customer C
RIGHT JOIN Borrower B ON C.cust_name = B.cust_name
RIGHT JOIN Loan L ON B.loan_no = L.loan_no
RIGHT JOIN Account A ON A.Acc_no = D.acc_no;

-- 5. Create Simple and Unique index on the Customer table.
CREATE UNIQUE INDEX idx_cust_name ON Customer(cust_name);

-- 6. Display index information.
SHOW INDEX FROM Customer;
